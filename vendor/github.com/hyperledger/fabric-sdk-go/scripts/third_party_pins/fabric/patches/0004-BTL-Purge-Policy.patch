From ef20d3697503c56b3848587683b3226704168443 Mon Sep 17 00:00:00 2001
From: Troy Ronda <t.....@securekey.com>
Date: Mon, 22 Jan 2018 16:53:08 -0500
Subject: [PATCH] BTL Purge Policy

Copyright SecureKey Technologies Inc. All Rights Reserved.
SPDX-License-Identifier: Apache-2.0

Cherry pick from https://gerrit.hyperledger.org/r/c/16971/

Change-Id: I50ca0dd13955d8dc5ace3cba7db0836c85db4695
Signed-off-by: Troy Ronda <t.....@securekey.com>
---
 protos/common/collection.pb.go | 69 +++++++++++++++++++++++++-----------------
 1 file changed, 41 insertions(+), 28 deletions(-)

diff --git a/protos/common/collection.pb.go b/protos/common/collection.pb.go
index 1cdc8493..2f603d66 100644
--- a/protos/common/collection.pb.go
+++ b/protos/common/collection.pb.go
@@ -199,6 +199,10 @@ type StaticCollectionConfig struct {
 	// The maximum number of peers that private data will be sent to
 	// upon endorsement. This number has to be bigger than required_peer_count.
 	MaximumPeerCount int32 `protobuf:"varint,4,opt,name=maximum_peer_count,json=maximumPeerCount" json:"maximum_peer_count,omitempty"`
+	// The number of blocks after which the collection data expires.
+	// For instance if the value is set to 10, a key last modified by block number 100
+	// will be purged at block number 111. A zero value is treated same as MaxUint64
+	BlockToLive uint64 `protobuf:"varint,5,opt,name=block_to_live,json=blockToLive" json:"block_to_live,omitempty"`
 }
 
 func (m *StaticCollectionConfig) Reset()                    { *m = StaticCollectionConfig{} }
@@ -234,6 +238,13 @@ func (m *StaticCollectionConfig) GetMaximumPeerCount() int32 {
 	return 0
 }
 
+func (m *StaticCollectionConfig) GetBlockToLive() uint64 {
+	if m != nil {
+		return m.BlockToLive
+	}
+	return 0
+}
+
 // Collection policy configuration. Initially, the configuration can only
 // contain a SignaturePolicy. In the future, the SignaturePolicy may be a
 // more general Policy. Instead of containing the actual policy, the
@@ -381,32 +392,34 @@ func init() {
 func init() { proto.RegisterFile("common/collection.proto", fileDescriptor0) }
 
 var fileDescriptor0 = []byte{
-	// 429 bytes of a gzipped FileDescriptorProto
-	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0xc1, 0x6a, 0xdb, 0x40,
-	0x10, 0x86, 0xa3, 0xc6, 0x71, 0xd0, 0xe4, 0x50, 0x77, 0x42, 0x1d, 0x51, 0x4a, 0x1a, 0x4c, 0x0f,
-	0x86, 0x16, 0xa9, 0xa4, 0x6f, 0x10, 0x53, 0x48, 0x69, 0xa0, 0x46, 0xb9, 0xe5, 0x22, 0xd6, 0xab,
-	0x89, 0xbc, 0x54, 0xda, 0x55, 0x76, 0x57, 0xc5, 0x3e, 0xf6, 0x2d, 0xfb, 0x38, 0xc1, 0xbb, 0x92,
-	0x2d, 0x1b, 0xdf, 0x3c, 0xf3, 0x7f, 0xf3, 0x7b, 0xe6, 0x5f, 0xc1, 0x15, 0x57, 0x55, 0xa5, 0x64,
-	0xc2, 0x55, 0x59, 0x12, 0xb7, 0x42, 0xc9, 0xb8, 0xd6, 0xca, 0x2a, 0x1c, 0x7a, 0xe1, 0xc3, 0xfb,
-	0x16, 0xa8, 0x55, 0x29, 0xb8, 0x20, 0xe3, 0xe5, 0xc9, 0x2f, 0xb8, 0x9a, 0x6d, 0x47, 0x66, 0x4a,
-	0x3e, 0x8b, 0x62, 0xce, 0xf8, 0x1f, 0x56, 0x10, 0x7e, 0x83, 0x21, 0x77, 0x8d, 0x28, 0xb8, 0x39,
-	0x9d, 0x5e, 0xdc, 0x46, 0xb1, 0xb7, 0x88, 0x0f, 0x07, 0xd2, 0x96, 0x9b, 0xac, 0x61, 0x74, 0xa8,
-	0xe1, 0x13, 0x44, 0xc6, 0x32, 0x2b, 0x78, 0xb6, 0x5b, 0x2d, 0xdb, 0xfa, 0x06, 0xd3, 0x8b, 0xdb,
-	0xeb, 0xce, 0xf7, 0xd1, 0x71, 0x87, 0x0e, 0xf7, 0x27, 0xe9, 0xd8, 0x1c, 0x55, 0xee, 0x42, 0x38,
-	0xaf, 0xd9, 0xba, 0x54, 0x2c, 0x9f, 0xfc, 0x0f, 0x60, 0x7c, 0x7c, 0x1e, 0x11, 0x06, 0x92, 0x55,
-	0xe4, 0xfe, 0x2d, 0x4c, 0xdd, 0x6f, 0x7c, 0x00, 0xac, 0xa8, 0x5a, 0x90, 0xce, 0x94, 0x2e, 0x4c,
-	0xe6, 0x42, 0x59, 0x47, 0x6f, 0xf6, 0xf7, 0xd9, 0x39, 0xcd, 0x9d, 0xde, 0x5e, 0x3b, 0xf2, 0x93,
-	0xbf, 0x75, 0x61, 0x7c, 0x1f, 0x63, 0xb8, 0xd4, 0xf4, 0xd2, 0x08, 0x4d, 0x79, 0x56, 0x13, 0xe9,
-	0x8c, 0xab, 0x46, 0xda, 0xe8, 0xf4, 0x26, 0x98, 0x9e, 0xa5, 0xef, 0x3a, 0x69, 0x4e, 0xa4, 0x67,
-	0x1b, 0x01, 0xbf, 0x02, 0x56, 0x6c, 0x25, 0xaa, 0xa6, 0xea, 0xe3, 0x03, 0x87, 0x8f, 0x5a, 0x65,
-	0x4b, 0x4f, 0x5e, 0x60, 0x7c, 0x7c, 0x13, 0x7c, 0x80, 0x91, 0x11, 0x85, 0x64, 0xb6, 0xd1, 0xd4,
-	0xdd, 0xe0, 0x33, 0xfd, 0xb4, 0xcd, 0xb4, 0xd3, 0xfd, 0xe0, 0x0f, 0xf9, 0x97, 0x4a, 0x55, 0xd3,
-	0xfd, 0x49, 0xfa, 0xd6, 0xec, 0x4b, 0xfd, 0x34, 0xff, 0x05, 0x80, 0xbd, 0x1c, 0xb5, 0xb0, 0xa4,
-	0x05, 0xc3, 0x08, 0xce, 0xf9, 0x92, 0x49, 0x49, 0x65, 0x1b, 0x66, 0x57, 0xe2, 0x25, 0x9c, 0xd9,
-	0x55, 0x26, 0x72, 0x17, 0x61, 0x98, 0x0e, 0xec, 0xea, 0x67, 0x8e, 0xd7, 0x00, 0xbb, 0x37, 0x77,
-	0x69, 0x84, 0x69, 0xaf, 0x83, 0x1f, 0x21, 0xdc, 0x3c, 0x86, 0xa9, 0x19, 0x27, 0x77, 0x7d, 0x98,
-	0xee, 0x1a, 0x77, 0x8f, 0xf0, 0x59, 0xe9, 0x22, 0x5e, 0xae, 0x6b, 0xd2, 0x25, 0xe5, 0x05, 0xe9,
-	0xf8, 0x99, 0x2d, 0xb4, 0xe0, 0xfe, 0xcb, 0x35, 0xed, 0x85, 0x4f, 0x5f, 0x0a, 0x61, 0x97, 0xcd,
-	0x62, 0x53, 0x26, 0x3d, 0x38, 0xf1, 0x70, 0xe2, 0xe1, 0xc4, 0xc3, 0x8b, 0xa1, 0x2b, 0xbf, 0xbf,
-	0x06, 0x00, 0x00, 0xff, 0xff, 0xa8, 0x98, 0x7f, 0x6c, 0x2f, 0x03, 0x00, 0x00,
+	// 453 bytes of a gzipped FileDescriptorProto
+	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0x41, 0x6b, 0xdb, 0x40,
+	0x10, 0x85, 0xa3, 0xc6, 0x76, 0xd0, 0x98, 0x52, 0x77, 0x43, 0x1d, 0x51, 0x4a, 0x6a, 0x44, 0x0f,
+	0x86, 0x16, 0xa9, 0xa4, 0xff, 0x20, 0xa6, 0x90, 0x52, 0x43, 0x8d, 0xd2, 0x53, 0x2e, 0x62, 0xb5,
+	0x9a, 0xc8, 0x4b, 0x24, 0xad, 0xb2, 0xbb, 0x32, 0xf6, 0xb1, 0xff, 0xbb, 0x87, 0xe0, 0x5d, 0xc9,
+	0x52, 0x8c, 0x6f, 0x9e, 0x79, 0xdf, 0x3c, 0xcf, 0x3c, 0x2d, 0x5c, 0x31, 0x51, 0x14, 0xa2, 0x0c,
+	0x99, 0xc8, 0x73, 0x64, 0x9a, 0x8b, 0x32, 0xa8, 0xa4, 0xd0, 0x82, 0x8c, 0xac, 0xf0, 0xf1, 0x43,
+	0x03, 0x54, 0x22, 0xe7, 0x8c, 0xa3, 0xb2, 0xb2, 0xff, 0x1b, 0xae, 0x16, 0x87, 0x91, 0x85, 0x28,
+	0x1f, 0x79, 0xb6, 0xa2, 0xec, 0x89, 0x66, 0x48, 0xbe, 0xc3, 0x88, 0x99, 0x86, 0xe7, 0xcc, 0xce,
+	0xe7, 0xe3, 0x1b, 0x2f, 0xb0, 0x16, 0xc1, 0xf1, 0x40, 0xd4, 0x70, 0xfe, 0x0e, 0x26, 0xc7, 0x1a,
+	0x79, 0x00, 0x4f, 0x69, 0xaa, 0x39, 0x8b, 0xbb, 0xd5, 0xe2, 0x83, 0xaf, 0x33, 0x1f, 0xdf, 0x5c,
+	0xb7, 0xbe, 0xf7, 0x86, 0x3b, 0x76, 0xb8, 0x3b, 0x8b, 0xa6, 0xea, 0xa4, 0x72, 0xeb, 0xc2, 0x45,
+	0x45, 0x77, 0xb9, 0xa0, 0xa9, 0xff, 0xdf, 0x81, 0xe9, 0xe9, 0x79, 0x42, 0x60, 0x50, 0xd2, 0x02,
+	0xcd, 0xbf, 0xb9, 0x91, 0xf9, 0x4d, 0x96, 0x40, 0x0a, 0x2c, 0x12, 0x94, 0xb1, 0x90, 0x99, 0x8a,
+	0x4d, 0x28, 0x3b, 0xef, 0xcd, 0xeb, 0x7d, 0x3a, 0xa7, 0x95, 0xd1, 0x9b, 0x6b, 0x27, 0x76, 0xf2,
+	0x8f, 0xcc, 0x94, 0xed, 0x93, 0x00, 0x2e, 0x25, 0x3e, 0xd7, 0x5c, 0x62, 0x1a, 0x57, 0x88, 0x32,
+	0x66, 0xa2, 0x2e, 0xb5, 0x77, 0x3e, 0x73, 0xe6, 0xc3, 0xe8, 0x7d, 0x2b, 0xad, 0x10, 0xe5, 0x62,
+	0x2f, 0x90, 0x6f, 0x40, 0x0a, 0xba, 0xe5, 0x45, 0x5d, 0xf4, 0xf1, 0x81, 0xc1, 0x27, 0x8d, 0xd2,
+	0xd1, 0x3e, 0xbc, 0x4d, 0x72, 0xc1, 0x9e, 0x62, 0x2d, 0xe2, 0x9c, 0x6f, 0xd0, 0x1b, 0xce, 0x9c,
+	0xf9, 0x20, 0x1a, 0x9b, 0xe6, 0x5f, 0xb1, 0xe4, 0x1b, 0xf4, 0x9f, 0x61, 0x7a, 0x7a, 0x5b, 0xb2,
+	0x84, 0x89, 0xe2, 0x59, 0x49, 0x75, 0x2d, 0xb1, 0xbd, 0xd3, 0xe6, 0xfe, 0xf9, 0x90, 0x7b, 0xab,
+	0xdb, 0xc1, 0x9f, 0xe5, 0x06, 0x73, 0x51, 0xe1, 0xdd, 0x59, 0xf4, 0x4e, 0xbd, 0x96, 0xfa, 0x89,
+	0xff, 0x73, 0x80, 0xf4, 0xb2, 0x96, 0x5c, 0xa3, 0xe4, 0x94, 0x78, 0x70, 0xc1, 0xd6, 0xb4, 0x2c,
+	0x31, 0x6f, 0x02, 0x6f, 0x4b, 0x72, 0x09, 0x43, 0xbd, 0x8d, 0x79, 0x6a, 0x62, 0x76, 0xa3, 0x81,
+	0xde, 0xfe, 0x4a, 0xc9, 0x35, 0x40, 0xf7, 0x2e, 0x4c, 0x62, 0x6e, 0xd4, 0xeb, 0x90, 0x4f, 0xe0,
+	0xee, 0x3f, 0x98, 0xaa, 0x28, 0x43, 0x93, 0x90, 0x1b, 0x75, 0x8d, 0xdb, 0x7b, 0xf8, 0x22, 0x64,
+	0x16, 0xac, 0x77, 0x15, 0xca, 0x1c, 0xd3, 0x0c, 0x65, 0xf0, 0x48, 0x13, 0xc9, 0x99, 0x7d, 0xdd,
+	0xaa, 0xb9, 0xf0, 0xe1, 0x6b, 0xc6, 0xf5, 0xba, 0x4e, 0xf6, 0x65, 0xd8, 0x83, 0x43, 0x0b, 0x87,
+	0x16, 0x0e, 0x2d, 0x9c, 0x8c, 0x4c, 0xf9, 0xe3, 0x25, 0x00, 0x00, 0xff, 0xff, 0x04, 0x6f, 0x60,
+	0x95, 0x53, 0x03, 0x00, 0x00,
 }
-- 
2.14.3 (Apple Git-98)

